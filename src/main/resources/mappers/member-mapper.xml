<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">
    <resultMap id="memberResultSet" type="Member">
        <result column="user_no" property="userNo"/>
        <result column="user_id" property="userId"/>
        <result column="user_pwd" property="userPwd"/>
        <result column="user_name" property="userName"/>
        <result column="gender" property="gender"/>
        <result column="email" property="email"/>
        <result column="address" property="address"/>
        <result column="extra_address" property="extraAddress"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="post_code" property="postCode"/>
        <result column="birth" property="birth"/>
        <result column="phone" property="phone"/>
        <result column="point" property="point"/>
        <result column="status" property="status"/>
        <result column="login_time" property="loginTime"/>
        <result column="report" property="report"/>

    </resultMap>

	<!--  
		<resultMap id="beerReviewResultSet" type="Score">
			<result column="score_no" property="scoreNo"></result>
			<result column="beer_name" property="beerName"></result>
			<result column="score" property="score"></result>
			<result column="updated_date" property="updatedDate"></result>
			<result column="comments" property="comments"></result>
		</resultMap>
	-->

   <update id="updateMember" parameterType="Member">
       update
              member
         set  user_name = #{userName}
            , gender = #{gender}
            , phone = #{phone}
            , email = #{email}
            , address = #{address}
       where  user_id = #{userId}
   </update>

	

	<update id="memberPwdUpdate" parameterType="Member">
		update
               member
          set user_pwd = #{newPwd}
       where  user_id =#{userId}
         
	</update>


   <update id="deleteMember" parameterType="string">
       update
             member
         set status = 2
      	where user_id = #{userId}   
   </update>
	
	<insert id="insertMember" parameterType="Member">
		insert
		  into member
		  (
		     user_no
		   , user_id
		   , user_pwd
		   , user_name
		   , gender
		   , email
		   , address
		   , extra_address
		   , detail_address
		   , post_code
		   , birth
		   , phone
		  )
		  values
		  (
		    seq_user_no.nextval
		  , #{userId}
		  , #{userPwd}
		  , #{userName}
		  , #{gender}
		  , #{email}
		  , #{address}
		  , #{extraAddress}
		  , #{detailAddress}
		  , #{postCode}
		  , #{birth}
		  , #{phone}
		  )
	</insert>

	<select id="findId" resultMap="memberResultSet"
			parameterType="string">
	  select user_id
	    from member
	   where user_name = #{userName}
	    and phone= #{phone}		
	</select>

	<select id="idCheck" parameterType="string" 
			resultType="_int">
		select
		       count(*)
		  from member
		 where user_id=#{userId}
	</select>


	<select id="loginMember" resultMap="memberResultSet"
			parameterType="Member">
		select
		       user_id
		     , user_pwd
		     , user_name
		     , gender
		     , email
		     , address
		     , extra_address
		     , detail_address
		     , post_code
		     , birth
		     , phone
		     , point
		     , status
		     , login_time
		     , report
		 from member
		where user_id = #{userId}
		   and status = 0
	</select>

	<!--  
		<select id="selectBeerReviewList" resultMap="beerReviewResultSet">
	
			select
			       score_no
				  ,beer_name
				  ,score
				  ,s.updated_date
				  ,comments
			from score s
					 join beer b using(beer_no)
			where s.status='Y';
	
		</select>
	
		<update id="updateBeerReview" parameterType="_int">
	
			update
	              score
	         set status = 'N'
	       where score_no = #{scoreNo}
	
	
		</update>
    -->

</mapper>
